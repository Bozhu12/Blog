// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.ts
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {};
var htmlModules_default = htmlModule;

// docs/.vuepress/config.ts
var DOMAIN_NAME = "www.bozhu12.cc";
var WEB_SITE = `https://${DOMAIN_NAME}`;
var config_default = defineConfig4CustomTheme({
  theme: "vdoing",
  locales: {
    "/": {
      lang: "zh-CN",
      title: "\u67CF\u7AF9",
      description: "\u5B66\u4E60\u8DB3\u8FF9 , \u8BB0\u5F55\u751F\u6D3B!"
    }
  },
  themeConfig: {
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "\u540E\u7AEF",
        link: "/backend/"
      },
      {
        text: "\u524D\u7AEF",
        link: "/web/"
      },
      {
        text: "\u66F4\u591A",
        link: "/other/",
        items: [
          { text: "\u5E94\u7528\u63A8\u8350", link: "/pages/Amway/" }
        ]
      },
      { text: "\u5173\u4E8E", link: "/about/" },
      { text: "\u53CB\u94FE", link: "/friendLink/" },
      {
        text: "\u7D22\u5F15",
        link: "/archives/",
        items: [
          { text: "\u5206\u7C7B", link: "/categories/" },
          { text: "\u6807\u7B7E", link: "/tags/" },
          { text: "\u5F52\u6863", link: "/archives/" }
        ]
      }
    ],
    searchPlaceholder: "\u6309\u4E0B \u{1D47A} \u641C\u7D22",
    sidebarDepth: 2,
    logo: "https://image.bozhu12.cc/myblog/Essay/hendImage01.jpg",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    docsBranch: "main",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    categoryText: "\u5176\u4ED6",
    bodyBgImg: [
      "https://image.bozhu12.cc/myblog/Essay/home.jpg"
    ],
    contentBgStyle: 1,
    pageButton: false,
    sidebar: "structuring",
    author: {
      name: "\u67CF\u7AF9",
      link: "https://github.com/Bozhu12"
    },
    blogger: {
      avatar: "https://image.bozhu12.cc/myblog/Essay/favicon.ico",
      name: "\u67CF\u7AF9",
      slogan: "\u594B\u6597\u67CF\u7AF9"
    },
    social: {
      icons: [
        {
          iconClass: "icon-weixin",
          title: "\u8054\u7CFB",
          link: "Bozhu12"
        },
        {
          iconClass: "icon-github",
          title: "GitHub",
          link: "https://github.com/Bozhu12"
        },
        {
          iconClass: "icon-erji",
          title: "\u542C\u97F3\u4E50",
          link: "https://music.163.com/#/user/home?id=448156561"
        }
      ]
    },
    footer: {
      createYear: 2019,
      copyrightInfo: ' | <a href="https://beian.miit.gov.cn/">\u6842ICP\u59072022009417\u53F7-1</a>'
    },
    extendFrontmatter: {
      author: {
        name: "Bozhu12",
        link: "https://github.com/Bozhu12"
      }
    },
    htmlModules: htmlModules_default
  },
  head: [
    ["link", { rel: "icon", href: "https://image.bozhu12.cc/myblog/Essay/favicon.ico" }],
    [
      "meta",
      {
        name: "Sasncan12",
        content: "\u67CF\u7AF9\u535A\u5BA2, \u4E2A\u4EBA\u6280\u672F\u535A\u5BA2, \u524D\u540E\u7AEF\u7AEF , \u6280\u672F\u6587\u6863"
      }
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#bd93f9" }],
    ["script", { "language": "javascript", "type": "text/javascript", "src": "/js/pgmanor-self.js" }],
    ["script", { "language": "javascript", "type": "text/javascript", "src": "/js/echarts.min.js" }]
  ],
  plugins: [
    [
      "sitemap",
      {
        hostname: WEB_SITE
      }
    ],
    "vuepress-plugin-baidu-autopush",
    [
      "vuepress-plugin-baidu-tongji",
      {
        hm: baiduCode_default
      }
    ],
    "fulltext-search",
    [
      "one-click-copy",
      {
        copySelector: ['div[class*="language-"] pre', 'div[class*="aside-code"] aside'],
        copyMessage: "\u590D\u5236\u6210\u529F",
        duration: 1e3,
        showInMobile: false
      }
    ],
    [
      "demo-block",
      {
        settings: {
          vue: "https://fastly.jsdelivr.net/npm/vue/dist/vue.min.js",
          jsfiddle: false,
          codepen: true,
          horizontal: false
        }
      }
    ],
    [
      "vuepress-plugin-zooming",
      {
        selector: ".theme-vdoing-content img:not(.no-zoom)",
        options: {
          bgColor: "rgba(0,0,0,0.6)"
        }
      }
    ],
    [
      "vuepress-plugin-vdoing-comment",
      {
        choosen: "artalk",
        options: {
          server: "https://comment.bozhu12.cc",
          site: "\u67CF\u7AF9",
          versionCheck: false
        }
      }
    ],
    [
      "@vuepress/last-updated",
      {
        transformer: (timestamp, lang) => {
          return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
        }
      }
    ]
  ],
  markdown: {
    lineNumbers: false,
    extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
  },
  extraWatchFiles: [
    ".vuepress/config.ts",
    ".vuepress/config/htmlModules.ts"
  ]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
